
// MarioMapEditor.cpp : 응용 프로그램에 대한 클래스 동작을 정의합니다.
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "MarioMapEditor.h"
#include "MainFrm.h"

#include "ChildFrm.h"
#include "MarioMapEditorDoc.h"
#include "MarioMapEditorView.h"

#include "GameConfig.h"
#include "NaPlatformAPI.h"
#include "UserNameDlg.h"

#include "PathManager.h"
#include "NaPlatformAPI.h"
#include <aes/md5.h>
#include "NaException.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CMarioMapEditorApp

BEGIN_MESSAGE_MAP(CMarioMapEditorApp, CWinAppEx)
	ON_COMMAND(ID_APP_ABOUT, &CMarioMapEditorApp::OnAppAbout)
	// 표준 파일을 기초로 하는 문서 명령입니다.
	ON_COMMAND(ID_FILE_NEW, &CWinAppEx::OnFileNew)
	ON_COMMAND(ID_FILE_OPEN, &CWinAppEx::OnFileOpen)
	// 표준 인쇄 설정 명령입니다.
	ON_COMMAND(ID_FILE_PRINT_SETUP, &CWinAppEx::OnFilePrintSetup)
END_MESSAGE_MAP()


// CMarioMapEditorApp 생성

CMarioMapEditorApp::CMarioMapEditorApp()
{
	m_bHiColorIcons = TRUE;

	// 다시 시작 관리자 지원
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_ALL_ASPECTS;
#ifdef _MANAGED
	// 응용 프로그램을 공용 언어 런타임 지원을 사용하여 빌드한 경우(/clr):
	//     1) 이 추가 설정은 다시 시작 관리자 지원이 제대로 작동하는 데 필요합니다.
	//     2) 프로젝트에서 빌드하려면 System.Windows.Forms에 대한 참조를 추가해야 합니다.
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: 아래 응용 프로그램 ID 문자열을 고유 ID 문자열로 바꾸십시오(권장).
	// 문자열에 대한 서식: CompanyName.ProductName.SubProduct.VersionInformation
	//SetAppID(_T("Neoarc.MarioV3.MapEditor.0.4"));
	SetAppID(_T("MarioMapEditor.AppID.NoVersion"));

	// TODO: 여기에 생성 코드를 추가합니다.
	// InitInstance에 모든 중요한 초기화 작업을 배치합니다.
}

// 유일한 CMarioMapEditorApp 개체입니다.

CMarioMapEditorApp theApp;


// CMarioMapEditorApp 초기화

BOOL CMarioMapEditorApp::InitInstance()
{
	_CrtSetDbgFlag(_CRTDBG_LEAK_CHECK_DF | _CRTDBG_ALLOC_MEM_DF);

	// 응용 프로그램 매니페스트가 ComCtl32.dll 버전 6 이상을 사용하여 비주얼 스타일을
	// 사용하도록 지정하는 경우, Windows XP 상에서 반드시 InitCommonControlsEx()가 필요합니다. 
	// InitCommonControlsEx()를 사용하지 않으면 창을 만들 수 없습니다.
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 응용 프로그램에서 사용할 모든 공용 컨트롤 클래스를 포함하도록
	// 이 항목을 설정하십시오.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinAppEx::InitInstance();

	// Minidump Handler
	::SetUnhandledExceptionFilter(CMarioMapEditorApp::CrashHandler);

	// OLE 라이브러리를 초기화합니다.
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction();

	// RichEdit 컨트롤을 사용하려면  AfxInitRichEdit2()가 있어야 합니다.	
	// AfxInitRichEdit2();

	// 표준 초기화
	// 이들 기능을 사용하지 않고 최종 실행 파일의 크기를 줄이려면
	// 아래에서 필요 없는 특정 초기화
	// 루틴을 제거해야 합니다.
	// 해당 설정이 저장된 레지스트리 키를 변경하십시오.
	// TODO: 이 문자열을 회사 또는 조직의 이름과 같은
	// 적절한 내용으로 수정해야 합니다.
	SetRegistryKey(_T("NeoarcApp"));
	//SetRegistryKey(_T("로컬 응용 프로그램 마법사에서 생성된 응용 프로그램"));
	LoadStdProfileSettings(16);  // MRU를 포함하여 표준 INI 파일 옵션을 로드합니다.

	InitContextMenuManager();

	InitKeyboardManager();

	InitTooltipManager();
	CMFCToolTipInfo ttParams;
	ttParams.m_bVislManagerTheme = TRUE;
	theApp.GetTooltipManager()->SetTooltipParams(AFX_TOOLTIP_TYPE_ALL,
		RUNTIME_CLASS(CMFCToolTipCtrl), &ttParams);

	// 응용 프로그램의 문서 템플릿을 등록합니다.  문서 템플릿은
	//  문서, 프레임 창 및 뷰 사이의 연결 역할을 합니다.
	CMultiDocTemplate* pDocTemplate;
	pDocTemplate = new CMultiDocTemplate(IDR_MarioMapEditorTYPE,
		RUNTIME_CLASS(CMarioMapEditorDoc),
		RUNTIME_CLASS(CChildFrame), // 사용자 지정 MDI 자식 프레임입니다.
		RUNTIME_CLASS(CMarioMapEditorView));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);

	// 주 MDI 프레임 창을 만듭니다.
	CMainFrame* pMainFrame = new CMainFrame;
	if (!pMainFrame || !pMainFrame->LoadFrame(IDR_MAINFRAME))
	{
		delete pMainFrame;
		return FALSE;
	}
	m_pMainWnd = pMainFrame;
	
	// 접미사가 있을 경우에만 DragAcceptFiles를 호출합니다.
	//  MDI 응용 프로그램에서는 m_pMainWnd를 설정한 후 바로 이러한 호출이 발생해야 합니다.
	// 끌어서 놓기에 대한 열기를 활성화합니다.
	m_pMainWnd->DragAcceptFiles();

	// 표준 셸 명령, DDE, 파일 열기에 대한 명령줄을 구문 분석합니다.
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);

	// DDE Execute 열기를 활성화합니다.
	EnableShellOpen();
	RegisterShellFileTypes(TRUE);

	// For not open empty document
	if (cmdInfo.m_nShellCommand == CCommandLineInfo::FileNew)
		cmdInfo.m_nShellCommand = CCommandLineInfo::FileNothing;

	// 명령줄에 지정된 명령을 디스패치합니다.
	// 응용 프로그램이 /RegServer, /Register, /Unregserver 또는 /Unregister로 시작된 경우 FALSE를 반환합니다.
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;
	// 주 창이 초기화되었으므로 이를 표시하고 업데이트합니다.
	pMainFrame->ShowWindow(m_nCmdShow);
	pMainFrame->UpdateWindow();

	// Temporary game instance for get path data
	Game *pGame = new Game;
	pGame->m_strGameRootDir = NaPlatform::GetCurrentPath();

	bool bDeny = false;
	GameConfig *pConfig = GameConfig::GetGameConfig(pGame);
	if (pConfig->m_strName.GetLength() == 0 ||
		pConfig->m_strUniqueId.GetLength() == 0)
	{
		/*
		UserNameDlg dlg;
		if (dlg.DoModal() == IDOK)
		{
			pConfig->m_strName = dlg.m_strName;
			pConfig->Save();
		}
		*/

		bDeny = true;
		
	}

	// Check register ticket
	auto strMacAddress = NaPlatform::GetMacAddress();
	auto strComputerName = NaPlatform::GetComputerName();
	NaDebugOut(L"MacAddress: %ls\n", strMacAddress.wstr());
	NaDebugOut(L"Computer name: %ls\n", strComputerName.wstr());

	NaString str;
	str.Format(L"%ls%ls", strMacAddress.wstr(), strComputerName.wstr());

	char szMD5[MD5_STR_LEN + 1];
	Compute_string_md5((unsigned char*)str.wstr(), str.GetBufferSize(), szMD5);
	NaString strLocalKey = szMD5;
	
	ServerRequest req;
	try
	{
		auto pTicket = req.GetRegisterTicket(strLocalKey);
		if (pTicket->m_nStatus != 1)
			bDeny = true;
	}
	catch(NaException &e)
	{
		bDeny = true;
	}

	if (bDeny)
	{
		// Re-launch
		NaString strMarioExe = PathManager::GetGameRootPath(pGame);
		strMarioExe += L"\\Mario.exe";

		ShellExecute(
			nullptr,
			L"open",
			strMarioExe.wstr(),
			nullptr,
			nullptr,
			SW_SHOW
		);

		PostQuitMessage(-1);
	}

	delete pGame;


	return TRUE;
}

int CMarioMapEditorApp::ExitInstance()
{
	//TODO: 추가한 추가 리소스를 처리합니다.
	AfxOleTerm(FALSE);

	return CWinAppEx::ExitInstance();
}

// CMarioMapEditorApp 메시지 처리기


// 응용 프로그램 정보에 사용되는 CAboutDlg 대화 상자입니다.

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 대화 상자 데이터입니다.
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_ABOUTBOX };
#endif

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 지원입니다.

// 구현입니다.
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// 대화 상자를 실행하기 위한 응용 프로그램 명령입니다.
void CMarioMapEditorApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

LONG CMarioMapEditorApp::CrashHandler(EXCEPTION_POINTERS * pException)
{
	NaString strPath = NaPlatform::GetCurrentPath();

	NaString strFileName;
	CTime t = CTime::GetCurrentTime();
	strFileName.Format(L"\\MarioMapEditor_CrashDump_%04d%02d%02d_%02d%02d%02d.dmp",
		t.GetYear(), t.GetMonth(), t.GetDay(),
		t.GetHour(), t.GetMinute(), t.GetSecond()
		);

	strPath += strFileName;

	HANDLE hDumpFile = CreateFile(strPath.wstr(), GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
	MINIDUMP_EXCEPTION_INFORMATION dumpInfo;
	dumpInfo.ExceptionPointers = pException;
	dumpInfo.ThreadId = ::GetCurrentThreadId();
	dumpInfo.ClientPointers = TRUE;
	
	MiniDumpWriteDump(
		::GetCurrentProcess(),
		::GetCurrentProcessId(), 
		hDumpFile, 
		MiniDumpNormal, 
		&dumpInfo, 
		NULL, 
		NULL);
	
	CloseHandle(hDumpFile);

	NaString strMsg;
	strMsg.Format(L"Unhandled exception has occurred.\nPlease report Crash dump to neoarc.\n\n-Crash dump created: %ls", strPath.wstr());
	::MessageBox(nullptr, strMsg.wstr(), L"Crashed :P (But our princess is safe)", MB_ICONERROR | MB_OK);

	return EXCEPTION_EXECUTE_HANDLER;
}

// CMarioMapEditorApp 사용자 지정 로드/저장 메서드

void CMarioMapEditorApp::PreLoadState()
{
	BOOL bNameValid;
	CString strName;
	bNameValid = strName.LoadString(IDS_EDIT_MENU);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_EDIT);
	bNameValid = strName.LoadString(IDS_EXPLORER);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_EXPLORER);
}

void CMarioMapEditorApp::LoadCustomState()
{
}

void CMarioMapEditorApp::SaveCustomState()
{
}

// CMarioMapEditorApp 메시지 처리기



